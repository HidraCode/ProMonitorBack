services:
  # A web service that builds from a Dockerfile
  - type: web
    runtime: docker
    name: webdis
    healthCheckPath: /healthcheck

  # Serviço da aplicação Node.js
  - type: web
    name: node-app
    plan: free
    env: node
    buildCommand: "yarn build"
    startCommand: "yarn start"
    envVars:
      - key: PORT
        value: 10000
      - key: POSTGRES_HOST
        value: ${POSTGRES_HOST} # Nome de host gerado para o PostgreSQL
      - key: POSTGRES_PORT
        value: ${POSTGRES_PORT} # Porta padrão do PostgreSQL
      - key: POSTGRES_USER
        value: ${POSTGRES_USER} # Nome de usuário gerado
      - key: POSTGRES_PASSWORD
        value: ${POSTGRES_PASSWORD} # Senha gerada para PostgreSQL
      - key: POSTGRES_DATABASE
        value: ${POSTGRES_DATABASE} # Nome do banco de dados gerado
      - key: JWT_SECRET
        value: secret_aqui
    healthCheckPath: "/healthcheck"
    autoDeploy: true
    routes:
      - type: healthcheck
        path: /healthcheck

envVarGroups:
  - name: postgres
    envVars:
    - key: POSTGRES_DATABASE
      value: promonitor
    - key: POSTGRES_USER
      value: root
    - key: POSTGRES_PASSWORD
      value: root
    - key: POSTGRES_HOST
      value: ${RENDER_EXTERNAL_HOSTNAME}
    - key: POSTGRES_PORT
      value: 5432

# List all PostgreSQL databases here
databases:

  # A database with a read replica
  - name: promonitor
    databaseName: promonitor
    user: root # Optional
    readReplicas:
      - name: promonitor-replica